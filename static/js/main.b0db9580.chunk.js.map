{"version":3,"sources":["components/Copyright.tsx","components/Header.tsx","components/timeline/timeline.tsx","components/App.tsx","reportWebVitals.ts","serviceWorkerRegistration.ts","theme.tsx","index.tsx"],"names":["Copyright","Typography","variant","color","align","Link","href","Date","getFullYear","Header","withStyles","theme","createStyles","root","flexGrow","menuButton","marginRight","spacing","title","this","props","classes","className","AppBar","position","Toolbar","IconButton","edge","aria-label","React","Component","useStyles","makeStyles","paper","padding","secondaryTail","backgroundColor","palette","secondary","main","CustomizedTimeline","Timeline","TimelineItem","TimelineOppositeContent","TimelineSeparator","TimelineDot","TimelineConnector","TimelineContent","Paper","elevation","component","App","Container","maxWidth","Box","my","gutterBottom","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","darkTheme","createMuiTheme","type","ReactDOM","render","StrictMode","ThemeProvider","CssBaseline","document","getElementById","URL","process","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.b0db9580.chunk.js","sourcesContent":["import { Link, Typography } from \"@material-ui/core\";\nimport React from \"react\";\n\nexport default function Copyright(): JSX.Element {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      <span>Copyright © </span>\n      <Link color=\"inherit\" href=\"/\">\n        Veith M. Bürgerhoff\n      </Link>\n      <span> {new Date().getFullYear()}</span>\n    </Typography>\n  );\n}\n","import {\n  AppBar,\n  createStyles,\n  IconButton,\n  Theme,\n  Toolbar,\n  Typography,\n  withStyles,\n  WithStyles\n} from \"@material-ui/core\";\nimport React from \"react\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1\n    },\n    menuButton: {\n      marginRight: theme.spacing(2)\n    },\n    title: {\n      flexGrow: 1\n    }\n  });\n\ntype Props = WithStyles<typeof styles>;\n\nconst Header = withStyles(styles)(\n  class HeaderImpl extends React.Component<Props> {\n    render() {\n      const { root, menuButton, title } = this.props.classes;\n      return (\n        <div className={root}>\n          <AppBar position=\"static\">\n            <Toolbar>\n              <IconButton edge=\"start\" className={menuButton} color=\"inherit\" aria-label=\"menu\">\n                <MenuIcon />\n              </IconButton>\n              <Typography variant=\"h6\" className={title}>\n                Portfolio\n              </Typography>\n            </Toolbar>\n          </AppBar>\n        </div>\n      );\n    }\n  }\n);\n\nexport default Header;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Timeline from \"@material-ui/lab/Timeline\";\nimport TimelineItem from \"@material-ui/lab/TimelineItem\";\nimport TimelineSeparator from \"@material-ui/lab/TimelineSeparator\";\nimport TimelineConnector from \"@material-ui/lab/TimelineConnector\";\nimport TimelineContent from \"@material-ui/lab/TimelineContent\";\nimport TimelineOppositeContent from \"@material-ui/lab/TimelineOppositeContent\";\nimport TimelineDot from \"@material-ui/lab/TimelineDot\";\nimport FastfoodIcon from \"@material-ui/icons/Fastfood\";\nimport LaptopMacIcon from \"@material-ui/icons/LaptopMac\";\nimport HotelIcon from \"@material-ui/icons/Hotel\";\nimport RepeatIcon from \"@material-ui/icons/Repeat\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    padding: \"6px 16px\"\n  },\n  secondaryTail: {\n    backgroundColor: theme.palette.secondary.main\n  }\n}));\n\nexport default function CustomizedTimeline(): JSX.Element {\n  const classes = useStyles();\n\n  return (\n    <Timeline align=\"alternate\">\n      <TimelineItem>\n        <TimelineOppositeContent>\n          <Typography variant=\"body2\" color=\"textSecondary\">\n            9:30 am\n          </Typography>\n        </TimelineOppositeContent>\n        <TimelineSeparator>\n          <TimelineDot>\n            <FastfoodIcon />\n          </TimelineDot>\n          <TimelineConnector />\n        </TimelineSeparator>\n        <TimelineContent>\n          <Paper elevation={3} className={classes.paper}>\n            <Typography variant=\"h6\" component=\"h1\">\n              Eat\n            </Typography>\n            <Typography>Because you need strength</Typography>\n          </Paper>\n        </TimelineContent>\n      </TimelineItem>\n      <TimelineItem>\n        <TimelineOppositeContent>\n          <Typography variant=\"body2\" color=\"textSecondary\">\n            10:00 am\n          </Typography>\n        </TimelineOppositeContent>\n        <TimelineSeparator>\n          <TimelineDot color=\"primary\">\n            <LaptopMacIcon />\n          </TimelineDot>\n          <TimelineConnector />\n        </TimelineSeparator>\n        <TimelineContent>\n          <Paper elevation={3} className={classes.paper}>\n            <Typography variant=\"h6\" component=\"h1\">\n              Code\n            </Typography>\n            <Typography>Because it&apos;s awesome!</Typography>\n          </Paper>\n        </TimelineContent>\n      </TimelineItem>\n      <TimelineItem>\n        <TimelineSeparator>\n          <TimelineDot color=\"primary\" variant=\"outlined\">\n            <HotelIcon />\n          </TimelineDot>\n          <TimelineConnector className={classes.secondaryTail} />\n        </TimelineSeparator>\n        <TimelineContent>\n          <Paper elevation={3} className={classes.paper}>\n            <Typography variant=\"h6\" component=\"h1\">\n              Sleep\n            </Typography>\n            <Typography>Because you need rest</Typography>\n          </Paper>\n        </TimelineContent>\n      </TimelineItem>\n      <TimelineItem>\n        <TimelineSeparator>\n          <TimelineDot color=\"secondary\">\n            <RepeatIcon />\n          </TimelineDot>\n        </TimelineSeparator>\n        <TimelineContent>\n          <Paper elevation={3} className={classes.paper}>\n            <Typography variant=\"h6\" component=\"h1\">\n              Repeat\n            </Typography>\n            <Typography>Because this is the life you love!</Typography>\n          </Paper>\n        </TimelineContent>\n      </TimelineItem>\n    </Timeline>\n  );\n}\n","import { Box, Container, Typography } from \"@material-ui/core\";\nimport React from \"react\";\nimport Copyright from \"./Copyright\";\nimport Header from \"./Header\";\nimport Timeline from \"./timeline/timeline\";\n\nexport default class App extends React.Component {\n  render(): JSX.Element {\n    return (\n      <div>\n        <Header />\n        <Container maxWidth=\"sm\">\n          <Timeline />\n          <Box my={4}>\n            <Typography variant=\"h4\" component=\"h1\" gutterBottom>\n              Portfolio starter using material-ui, react, and typescript\n            </Typography>\n            <Copyright />\n          </Box>\n        </Container>\n      </div>\n    );\n  }\n}\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler): void => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config): void {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://cra.link/PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://cra.link/PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" }\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (response.status === 404 || (contentType != null && contentType.indexOf(\"javascript\") === -1)) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\"No internet connection found. App is running in offline mode.\");\n    });\n}\n\nexport function unregister(): void {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import { createMuiTheme } from \"@material-ui/core/styles\";\n\nconst darkTheme = createMuiTheme({\n  palette: {\n    type: \"dark\"\n  }\n});\n\nexport default darkTheme;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { CssBaseline, ThemeProvider } from \"@material-ui/core\";\nimport * as serviceWorkerRegistration from \"./serviceWorkerRegistration\";\nimport theme from \"./theme\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}